name: Build and Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'  # Replace with the desired .NET version

      - name: Restore NuGet Packages
        run: dotnet restore

      - name: Build and Publish for Windows
        run: dotnet publish -c Release --self-contained true -r win-x64 --output ./Release/windows-x64 --framework net7.0 /p:PublishSingleFile=true /p:PublishTrimmed=true

      - name: Build and Publish for Linux x64
        run: dotnet publish -c Release --self-contained true -r linux-x64 --output ./Release/linux-x64 --framework net7.0 /p:PublishSingleFile=true /p:PublishTrimmed=true

      - name: Build and Publish for Linux ARM
        run: dotnet publish -c Release --self-contained true -r linux-arm --output ./Release/linux-arm --framework net7.0 /p:PublishSingleFile=true /p:PublishTrimmed=true

      - name: Build and Publish for macOS
        run: dotnet publish -c Release --self-contained true -r osx-x64 --output ./Release/macos-x64 --framework net7.0 /p:PublishSingleFile=true /p:PublishTrimmed=true

      - name: Build and Publish for macOS ARM
        run: dotnet publish -c Release --self-contained true -r osx-arm64 --output ./Release/macos-arm64 --framework net7.0 /p:PublishSingleFile=true /p:PublishTrimmed=true

      - name: Remove Existing Zip Directories
        run: rm -rf ./Notes/Release/*.zip

      - name: Zip Directories
        run: |
          cd ./Notes/Release
          for dir in ./*; do zip -r "${dir}.zip" "$dir"; done
          cd ../..

      - name: Get Releases
        id: get_releases
        uses: actions/github-script@v4
        with:
          script: |
            const response = await github.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            });
            console.log(response.data[0].upload_url);
            core.setOutput("upload_url", response.data[0].upload_url)

      - name: Update Releases
        id: update_releases
        uses: actions/upload-release-asset@v1
        with:
          asset_path: ./Notes/Release/*.zip
          asset_name: ${{ github.run_number }}.zip
          asset_content_type: application/zip
          upload_url: ${{ steps.get_releases.outputs.upload_url }}

